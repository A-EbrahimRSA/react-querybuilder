import type { RQBDateTimeLibraryAPI, RQBJsonLogicDateTimeOperations } from './types';

/**
 * Custom operations for use with JsonLogic objects generated by
 * {@link datetimeRuleProcessorJsonLogic}.
 */
export const getDatetimeJsonLogicOperations = ({
  isAfter,
  isBefore,
  isSame,
}: RQBDateTimeLibraryAPI): RQBJsonLogicDateTimeOperations => ({
  dateAfter: (a, b) => isAfter(a, b),
  dateBefore: (a, b) => isBefore(a, b),
  dateBetween: (a, b, c) =>
    isSame(b, a) ||
    isSame(b, c) ||
    (isAfter(b, a) && isBefore(b, c)) ||
    (isAfter(b, c) && isBefore(b, a)),
  dateNotBetween: (a, b, c) =>
    !isSame(b, a) &&
    !isSame(b, c) &&
    ((isBefore(a, c) && (isBefore(b, a) || isAfter(b, c))) ||
      (isAfter(a, c) && (isBefore(b, c) || isAfter(b, a)))),
  dateIn: (a, b) => b.some(v => isSame(a, v)),
  dateNotIn: (a, b) => b.every(v => !isSame(a, v)),
  dateNotOn: (a, b) => !isSame(a, b),
  dateOn: (a, b) => isSame(a, b),
  dateOnOrAfter: (a, b) => isAfter(a, b) || isSame(a, b),
  dateOnOrBefore: (a, b) => isBefore(a, b) || isSame(a, b),
});
