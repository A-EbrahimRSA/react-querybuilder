/**
 * This script prepares the yarn.lock file generated by Bun for upgrading
 * to Yarn berry (`yarn set version berry`).
 */

import { join as pathJoin } from 'path';

const lernaJson = Bun.file(pathJoin(import.meta.dir, '../lerna.json'));
const { version } = await lernaJson.json();

const yarnLock = await Bun.file(pathJoin(import.meta.dir, '../yarn.lock')).text();
const websitePkgJson = await Bun.file(pathJoin(import.meta.dir, '../website/package.json')).text();

const newYarnLock = yarnLock
  .replace(
    /resolved "workspace:packages\/react-querybuilder"/g,
    `resolved "https://registry.yarnpkg.com/react-querybuilder/-/react-querybuilder-${version}.tgz"`
  )
  .replace(
    /resolved "workspace:website"/g,
    `resolved "https://registry.yarnpkg.com/website/-/website-1.0.0.tgz"`
  )
  .replace(
    /resolved "workspace:packages\/(.*)"/g,
    `resolved "https://registry.yarnpkg.com/@react-querybuilder/$2/-/$2-${version}.tgz"`
  )
  .replace(/version "workspace:website"/, `version "1.0.0"`)
  .replace(/version "workspace:packages\/.*"/g, `version "${version}"`)
  .replace(/(["@])file:/g, `$1link:`);

const newWebsitePkgJson = websitePkgJson.replace(/(["@])file:/g, `$1link:`);

await Bun.write(pathJoin(import.meta.dir, '../yarn.lock'), newYarnLock);
await Bun.write(pathJoin(import.meta.dir, '../website/package.json'), newWebsitePkgJson);
